import requests
from requests.auth import HTTPBasicAuth
from datetime import datetime
from tcms.xmlrpc import TestCaseRun
import re

# Jira cấu hình
JIRA_URL = "http://jira.i-com.vn/rest/api/2/issue"
JIRA_USER = "thuYPT3"
JIRA_PASS = "@16072018Nhu"
JIRA_PROJECT_KEY = "PAYT"
JIRA_ISSUE_TYPE = "Bug"

# Hàm tách thông tin từ execution notes
def parse_jira_fields_from_comment(comment: str) -> dict:
    fields = {}
    patterns = {
        "assignee": r"assignee:\s*(\S+)",
        "epic_id": r"epic_id:\s*(\S+)",
        "duedate": r"duedate:\s*(\d{4}-\d{2}-\d{2})",
        "du_kien": r"du_kien:\s*(.+)"
    }

    for key, pattern in patterns.items():
        match = re.search(pattern, comment, re.IGNORECASE)
        if match:
            fields[key] = match.group(1).strip()
    
    return fields

# Lấy test case FAILED từ test run cụ thể
TEST_RUN_ID = 1234  # ← bạn đổi ID run này theo test thực tế

failed_cases = TestCaseRun.filter(run_id=TEST_RUN_ID, status="FAILED")

for case in failed_cases:
    notes = case.notes or ""
    parsed = parse_jira_fields_from_comment(notes)

    assignee = parsed.get("assignee", JIRA_USER)
    epic_id = parsed.get("epic_id")
    duedate = parsed.get("duedate")
    du_kien = parsed.get("du_kien")

    payload = {
        "fields": {
            "project": {"key": JIRA_PROJECT_KEY},
            "summary": f"[AutoBug] {case.case.summary}",
            "description": f"*Actual Result:* {notes}\n*Test Case ID:* {case.case_id}",
            "issuetype": {"name": JIRA_ISSUE_TYPE},
            "reporter": {"name": case.assignee["username"]},  # Người đang thực hiện test
            "assignee": {"name": assignee},
            "customfield_10109": epic_id,
            "duedate": duedate,
            "customfield_10504": datetime.today().strftime("%Y-%m-%d"),
            "customfield_10401": du_kien
        }
    }

    # Gửi lên Jira
    response = requests.post(
        JIRA_URL,
        json=payload,
        auth=HTTPBasicAuth(JIRA_USER, JIRA_PASS)
    )

    if response.status_code == 201:
        issue_key = response.json()["key"]
        print(f"✅ Created Jira issue {issue_key} for TC#{case.case_id}")
        # Ghi link Jira vào notes
        case.update(notes=notes + f"\n[JIRA]: {issue_key}")
    else:
        print(f"❌ Failed to create Jira issue for TC#{case.case_id}")
        print(response.status_code, response.text)
